{
  "_args": [
    [
      {
        "raw": "gulp-ruby-sass@^2.0.6",
        "scope": null,
        "escapedName": "gulp-ruby-sass",
        "name": "gulp-ruby-sass",
        "rawSpec": "^2.0.6",
        "spec": ">=2.0.6 <3.0.0",
        "type": "range"
      },
      "F:\\test"
    ]
  ],
  "_cnpm_publish_time": 1478226740152,
  "_from": "gulp-ruby-sass@^2.0.6",
  "_hasShrinkwrap": false,
  "_id": "gulp-ruby-sass@2.1.1",
  "_location": "/gulp-ruby-sass",
  "_nodeVersion": "4.6.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-ruby-sass-2.1.1.tgz_1478226739904_0.1287287229206413"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {
    "fs.realpath": "1.0.0",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "minimatch": "3.0.3",
    "once": "1.3.3",
    "path-is-absolute": "1.0.1"
  },
  "_requested": {
    "raw": "gulp-ruby-sass@^2.0.6",
    "scope": null,
    "escapedName": "gulp-ruby-sass",
    "name": "gulp-ruby-sass",
    "rawSpec": "^2.0.6",
    "spec": ">=2.0.6 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://r.cnpmjs.org/gulp-ruby-sass/download/gulp-ruby-sass-2.1.1.tgz",
  "_shasum": "e80f65092108ee4afcb4936088dc7253369adcac",
  "_shrinkwrap": null,
  "_spec": "gulp-ruby-sass@^2.0.6",
  "_where": "F:\\test",
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-ruby-sass/issues"
  },
  "dependencies": {
    "convert-source-map": "^1.0.0",
    "cross-spawn": "^5.0.0",
    "dargs": "^2.0.3",
    "each-async": "^1.0.0",
    "escape-string-regexp": "^1.0.3",
    "glob": "^7.0.3",
    "glob2base": "0.0.12",
    "gulp-util": "^3.0.4",
    "md5-hex": "^1.0.2",
    "object-assign": "^4.0.1",
    "os-tmpdir": "^1.0.0",
    "path-exists": "^2.0.0",
    "rimraf": "^2.2.8"
  },
  "description": "Compile Sass to CSS with Ruby Sass",
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-sourcemaps": "^2.2.0",
    "mocha": "*",
    "vinyl-file": "^2.0.0",
    "xo": "^0.16.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e80f65092108ee4afcb4936088dc7253369adcac",
    "size": 6085,
    "noattachment": false,
    "tarball": "http://r.cnpmjs.org/gulp-ruby-sass/download/gulp-ruby-sass-2.1.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "be9483b804d67aa3b71e38f387b4bba65bcf2d3b",
  "homepage": "https://github.com/sindresorhus/gulp-ruby-sass#readme",
  "keywords": [
    "gulpplugin",
    "scss",
    "sass",
    "css",
    "compile",
    "preprocessor",
    "style",
    "ruby",
    "source-map",
    "source-maps",
    "sourcemap",
    "sourcemaps"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    {
      "name": "Rob Wierzbowski",
      "email": "robwierzbowski@gmail.com",
      "url": "robwierzbowski.com"
    }
  ],
  "name": "gulp-ruby-sass",
  "optionalDependencies": {},
  "publish_time": 1478226740152,
  "readme": "# gulp-ruby-sass [![Build Status](https://travis-ci.org/sindresorhus/gulp-ruby-sass.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-ruby-sass)\n\nCompiles Sass with the [Sass gem](http://sass-lang.com/install) and pipes the results into a gulp stream.<br>\nTo compile Sass with [libsass](http://libsass.org/), use [gulp-sass](https://github.com/dlmanning/gulp-sass)\n\n---\n\n<p align=\"center\"><b>⚛ Learn React in just a couple of afternoons with this awesome <a href=\"https://ReactForBeginners.com/friend/AWESOME\">React course</a> by Wes Bos</b></p>\n\n---\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-ruby-sass\n```\n\nRequires [Sass >=3.4](http://sass-lang.com/install).\n\n\n## Usage\n\n### sass(source, [options])\n\nUse gulp-ruby-sass *instead of `gulp.src`* to compile Sass files.\n\n```js\nconst gulp = require('gulp');\nconst sass = require('gulp-ruby-sass');\n\ngulp.task('sass', () =>\n\tsass('source/file.scss')\n\t\t.on('error', sass.logError)\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n#### source\n\nType: `string`, `array`\n\nFile or glob pattern (`source/**/*.scss`) to compile. Ignores files prefixed with an underscore. **Directory sources are not supported.**\n\n#### options\n\nType: `object`\n\nObject containing plugin and Sass options.\n\n##### bundleExec\n\nType: `boolean`<br>\nDefault: `false`\n\nRun Sass with [bundle exec](http://gembundler.com/man/bundle-exec.1.html).\n\n##### sourcemap\n\nType: `boolean`<br>\nDefault: `false`\n\nInitialize and pass Sass sourcemaps to [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps). Note this option replaces Sass's `sourcemap` option.\n\n```js\nconst gulp = require('gulp');\nconst sass = require('gulp-ruby-sass');\nconst sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('sass', () =>\n\tsass('source/file.scss', {sourcemap: true})\n\t\t.on('error', sass.logError)\n\t\t// for inline sourcemaps\n\t\t.pipe(sourcemaps.write())\n\t\t// for file sourcemaps\n\t\t.pipe(sourcemaps.write('maps', {\n\t\t\tincludeContent: false,\n\t\t\tsourceRoot: 'source'\n\t\t}))\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n##### base\n\nType: `string`\n\nIdentical to `gulp.src`'s [`base` option](https://github.com/gulpjs/gulp/blob/master/docs/API.md#optionsbase).\n\n##### tempDir\n\nType: `string`<br>\nDefault: System temp directory\n\nThis plugin compiles Sass files to a temporary directory before pushing them through the stream. Use `tempDir` to choose an alternate directory if you aren't able to use the default OS temporary directory.\n\n##### emitCompileError\n\nType: `boolean`<br>\nDefault: `false`\n\nEmit a gulp error when Sass compilation fails.\n\n##### verbose\n\nType: `boolean`<br>\nDefault: `false`\n\nLog the spawned Sass or Bundler command. Useful for debugging.\n\n##### Sass options\n\nAny additional options are passed directly to the Sass executable. The options are camelCase versions of Sass's options parsed by [`dargs`](https://github.com/sindresorhus/dargs).\n\nRun `sass -h` for a complete list of Sass options.\n\n```js\ngulp.task('sass', () =>\n\tsass('source/file.scss', {\n\t\t\tprecision: 6,\n\t\t\tstopOnError: true,\n\t\t\tcacheLocation: './',\n\t\t\tloadPath: [ 'library', '../../shared-components' ]\n\t\t})\n\t\t.on('error', sass.logError)\n\t\t.pipe(gulp.dest('result'))\n);\n```\n\n### sass.logError(err)\n\nConvenience function for pretty error logging.\n\n### sass.clearCache([tempDir])\n\nIn rare cases you may need to clear gulp-ruby-sass's cache. This sync function deletes all files used for Sass caching. If you've set a custom temporary directory in your task you must pass it to `clearCache`.\n\n\n## Issues\n\nThis plugin wraps the Sass gem for the gulp build system. It does not alter Sass's output in any way. Any issues with Sass output should be reported to the [Sass issue tracker](https://github.com/sass/sass/issues).\n\nBefore submitting an issue please read the [contributing guidelines](https://github.com/sindresorhus/gulp-ruby-sass/blob/master/contributing.md).\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/gulp-ruby-sass.git"
  },
  "scripts": {
    "test": "xo && cd test && mocha test.js"
  },
  "version": "2.1.1",
  "xo": {
    "rules": {
      "brace-style": [
        "error",
        "stroustrup",
        {
          "allowSingleLine": false
        }
      ]
    }
  }
}
